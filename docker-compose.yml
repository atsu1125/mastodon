version: '3'
services:

## PGroonga 使ってるからデータベースはPostgreSQL 13を外出ししてほしいのだわ
## その代わりにextra_hostsでPostgreSQLが動いてるマシンにDockerコンテナからアクセスできるようにしてほしいのだわ

  redis:
    restart: always
    image: redis:alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data

## PGroongaを使うからElasticSearchは要らないのだわ

  web:
    build: .
    image: atsu1125/mastodon
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - external_network
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    ports:
      - "192.168.50.10:3002:3000"
#      - "127.0.0.1:3000:3000"
    depends_on:
      - redis
    volumes:
      - ./public/system:/mastodon/public/system
    extra_hosts:
      - "dockerhost:192.168.50.10"

  streaming:
    build: .
    image: atsu1125/mastodon
    restart: always
    env_file: .env.production
    command: node ./streaming
    networks:
      - external_network
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    ports:
      - "192.168.50.10:4002:4000"
#      - "127.0.0.1:4000:4000"
    depends_on:
      - redis
    extra_hosts:
      - "dockerhost:192.168.50.10"

  sidekiq_default:
    build: .
    image: atsu1125/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -q default
    depends_on:
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    extra_hosts:
      - "dockerhost:192.168.50.10"

  sidekiq_push:
    build: .
    image: atsu1125/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -q push
    depends_on:
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    extra_hosts:
      - "dockerhost:192.168.50.10"

  sidekiq_pull:
    build: .
    image: atsu1125/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -q pull
    depends_on:
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    extra_hosts:
      - "dockerhost:192.168.50.10"

  sidekiq_mailers:
    build: .
    image: atsu1125/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -q mailers
    depends_on:
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    extra_hosts:
      - "dockerhost:192.168.50.10"

  sidekiq_scheduler:
    build: .
    image: atsu1125/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -q scheduler
    depends_on:
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    extra_hosts:
      - "dockerhost:192.168.50.10"

## Uncomment to enable federation with tor instances along with adding the following ENV variables
## http_proxy=http://privoxy:8118
## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
#  tor:
#    image: sirboops/tor
#    networks:
#      - external_network
#      - internal_network
#
#  privoxy:
#    image: sirboops/privoxy
#    volumes:
#      - ./priv-config:/opt/config
#    networks:
#      - external_network
#      - internal_network

networks:
  external_network:
  internal_network:
    internal: true
